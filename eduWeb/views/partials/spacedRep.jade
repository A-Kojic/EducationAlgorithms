br
br
#srWrap
	#sr-wrapper.container.centered(style="opacity:.90;")
		.row
			#srJumbo.container.col-md-10.col-md-offset-1.jumbotron.centered(style="background-color:#2b434f;")
				#containerHeader.text-left
					h1 
						span(style="color: white;") SR
						span.label.label-info  {{title}}.me		
						hr    
				.row
					.col-sm-5.text-center
						#leftTodo
							form#todo-form(ng-submit='createSite()')
								input#new-todo(placeholder='Add Site Here', ng-model='formData.text', autofocus='')

						form


							br
							br
							//- button.btn.btn-primary.btn-lg(type='submit', ng-click='createSite()') Add
						.row
							button.btn.btn-primary Recommend
							br
							br
							span(style="color: white;") {{showSite}} 

							//- span(style="color: white;") test
					.col-sm-6.col-sm-offset-1
		
											
						section#todoapp
							section#todo-list
								li.toggle(ng-repeat='site in sites')

									.row
										.col-xs-1.label
											input.toggle(type='checkbox', ng-model='todo.completed')
										.col-xs-11
											.div(ng-dblclick='deleteSite(site._id)') {{site.text}}
								hr
							footer#footer
								span#todo-count
									strong 5 remaining
							
								ul#filters
									li
										a(ng-class="{selected: location.path() == '/'} ", href='#/') Top
									li
										a(ng-class="{selected: location.path() == '/active'}", href='#/active') Recent
									li
										a(ng-class="{selected: location.path() == '/completed'}", href='#/completed') Worst																
					

.container.mt
	.row
												
		.col-lg-5.col-lg-offset-1
			.spacing
			h4 Spaced Repitition
			p
				em Spaced Repitition is based on this fact to reinforce the knowledge in an optimal way to increase long term potentiation of facts. 
				br
				br
				| What this means is that instead of trying to cram a ton of information with equal exposure and weight into your head, 
				em you focus on your weak links at the right time to optimize the learning process. 
				| Think of the process of trying to learn 150 different concepts for an exam. In order to cover all 150 concepts with an equal level of mastery, we would need a strategic way to target the weak links and de-emphasize the ones we already know well. The adage “failure is the best teacher” rings loud and clear here. In order to see true progress and rapid growth, you must struggle and step out of a comfort zone. The SR algorithm applies this concept as a generalized template for one method of making the most out of your limited time. This is just one of the few algorithms that goes into the Adaptive Module, with the hopes of providing this platform and knowledge to all edTech developers to rid the inefficiencies of traditional learning. 
				br
				br
			h4 The Algorithm
			p
				| We take a body of knowledge, and split it into individual pieces to be studied. Be it concepts in math, science, philosophy, etc, any topic can be broken down into it’s fundamental “atoms” that contribute to the holistic web of knowledge that constitutes a subject.
				br
				br
				| All of the items are now assigned an “E-Factor”, which represents the “easiness” of a certain piece of data according to you. This will be updated over time.
				br
				br
				| Now we assign intervals at which each piece of information should be shown to you according to this forgetting curve, and continuously update these intervals for each item with  a function that models the forgetting curve.
				| After each exposure to the student, the Q-Factor is the quality of the response, usually a measure of 1-5 that determines the student’s level of understanding on that item. We can take in metrics such as duration spent on problem, incorrect guesses, or even in the future advanced neurotracking software to determine the physiological signs of frustration in a students face.
				| The E-Factor is then assessed and recalculated, and the algorithm repeats to truly adapt to the learner. 
		.col-lg-4.col-lg-offset-1
			.spacing
			h4 Project Details
			.hline
			p
				b Name:
				| WebRec.me
			p
				b Author:
				| Owen Chen
			p
				b Categories:
				| Learning Algorithms, Spaced Repitition
			p
				b Tagged:
				| Flat, UI, Education
			p
				b Website:
				a(href='https://github.com/BrowenChen/WebRecGenerator')  http://github.com/browenchen/webRecGenerator